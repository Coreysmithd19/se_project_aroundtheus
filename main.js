!function(){"use strict";class e{constructor(e,t,r){let{name:s,link:o}=e;this._name=s,this._link=o,this._cardSelector=t,this._handleImageClick=r}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardEl.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardEl.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardEl.remove(),this._cardEl=null}_handleLikeIcon(){this._cardEl.querySelector(".card__like-button").classList.toggle("card__like-button-active")}getView(){return this._cardEl=this._getTemplate(),this._cardEl.querySelector(".card__title").textContent=this._name,this._cardImageElement=this._cardEl.querySelector(".card__image"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this._cardEl}}var t=class{constructor(e,t){this._config=e,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(e){this._hasInvalidInput(e)?this.disableButton():this._enableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._config.inputSelector)],this._submitButton=this._form.querySelector(this._config.submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners()}};class r{constructor(e){let{popupSelector:t}=e;this.popupElement=document.querySelector(t),this.openedModal=document.querySelector(".modal_opened"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListners(){this.popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class s extends r{constructor(e,t){super({popupSelector:e}),this.popupForm=this.popupElement.querySelector(".modal__form"),this.handleFormSubmit=t}_getInputValues(){const e=this.popupForm.querySelectorAll(".modal__form-input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListners(),this.popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.handleFormSubmit(this._getInputValues()),e.target.reset(),super.close()}))}}const o={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__popup_input_type_error",errorClass:"modal__popup_error_visible"},i=document.querySelector("#profile__edit-button"),n=document.querySelector("#profile__edit-modal"),l=document.querySelector(".profile__title"),a=document.querySelector(".profile__description"),c=document.querySelector("#profile-title-input"),d=document.querySelector("#profile-description-input"),u=(n.querySelector("#modal-closed-button"),n.querySelector(".modal__form")),_=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),h=document.querySelector("#add-card-modal"),m=(h.querySelector("#modal-closed-button"),document.querySelector("#preview-image")),p=(document.querySelector(".modal__image"),m.querySelector("#modal-closed-button"),document.querySelector(".modal__title"),h.querySelector("#add-card-form")),E=(p.querySelector("#place-title"),p.querySelector("#place-image"),document.querySelector(".profile__image")),f=new class extends r{constructor(e){super({popupSelector:e}),this.previewImage=document.querySelector(".modal__imgae_popup"),this.previewImageTitle=document.querySelector(".modal__title")}open(e){this.previewImage.src=e.link,this.previewImage.alt=e.name,this.previewImageTitle.textContent=e.name,super.open()}}("#preview-image");function v(e){f.open({name:e.name,link:e.link})}function S(t){const r=function(t){return new e(t,"#card-template",v).getView()}(t);L.addItem(r)}f.setEventListners();const b=new s("#profile__edit-modal",(function(e){let{title:t,description:r}=e;q.profileEdit(t,r).then(((e,t)=>{g.setUserInfo(e,t)}))})),y=new s("#add-card-modal",(function(e){let{name:t,url:r}=e;S({name:t,link:r})})),g=new class{constructor(e,t,r){this._profiletitle=e,this._profiledescription=t,this._avatar=r}getUserInfo(){return{name:this._profiletitle.textContent,job:this._profiledescription.textContent,avatar:this._avatar.textContent}}setUserInfo(e,t,r){this._profiletitle.textContent=e,this._profiledescription.textContent=t,this._avatar.src=r}setAvatar(e){this._avatar.src=e}}(l,a,E),q=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}"))).catch((e=>{console.error(e)}))}getUserInfo(){return fetch(`${this._baseUrl}/users`,{headers:this._headers}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}"))).catch((e=>{console.error(e)}))}profileEdit(e){let{title:t,description:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:Json.stringify({title:t,description:r}).then((e=>e.ok?e.json():Promise.reject("Error: ${res.status}")))})}addCard(e,t){fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})})}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"6bc379b4-e2fd-4963-8b35-f48b85a38b35","Content-Type":"application/json"}});q.profileEdit(res).then((e=>{console.log(e)}));const C=new t(o,u),I=new t(o,p);C.enableValidation(),I.enableValidation(),b.setEventListeners(),y.setEventListeners(),i.addEventListener("click",(()=>{const e=g.getUserInfo();c.value=e.name,d.value=e.job,b.open()})),_.addEventListener("click",(()=>{y.open()}));const L=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}renderItems(e){e.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:S},".cards__list");q.getInitialCards().then((e=>L.renderItems(e))),q.getUserInfo().then((e=>g.setUserInfo(e)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,