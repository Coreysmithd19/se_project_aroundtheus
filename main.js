!function(){"use strict";class e{constructor(e,t,s){let{name:n,link:r}=e;this._name=n,this._link=r,this._cardSelector=t,this._handleImageClick=s}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}_setEventListeners(){this._cardEl.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleLikeIcon()})),this._cardEl.querySelector(".card__trash-button").addEventListener("click",(()=>{this._handleDeleteCard()})),this._cardImageElement.addEventListener("click",(()=>{this._handleImageClick({name:this._name,link:this._link})}))}_handleDeleteCard(){this._cardEl.remove(),this._cardEl=null}_handleLikeIcon(){this._cardEl.querySelector(".card__like-button").classList.toggle("card__like-button-active")}getView(){return this._cardEl=this._getTemplate(),this._cardEl.querySelector(".card__title").textContent=this._name,this._cardImageElement=this._cardEl.querySelector(".card__image"),this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this._cardEl}}var t=class{constructor(e,t){this._config=e,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_checkInputValidity(e){if(!e.validity.valid)return this._showInputError(e);this._hideInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}_toggleButtonState(e){this._hasInvalidInput(e)?this.disableButton():this._enableButton()}_enableButton(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}_setEventListeners(){this._inputEls=[...this._form.querySelectorAll(this._config.inputSelector)],this._submitButton=this._form.querySelector(this._config.submitButtonSelector),this._inputEls.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState(this._inputEls)}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this.disableButton()})),this._setEventListeners()}};class s{constructor(e){let{popupSelector:t}=e;this.popupElement=document.querySelector(t),this.openedModal=document.querySelector(".modal_opened"),this._handleEscClose=this._handleEscClose.bind(this)}open(){this.popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this.popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListners(){this.popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__close-button"))&&this.close()}))}}class n extends s{constructor(e,t){super({popupSelector:e}),this.popupForm=this.popupElement.querySelector(".modal__form"),this.handleFormSubmit=t}_getInputValues(){const e=this.popupForm.querySelectorAll(".modal__form-input"),t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){super.setEventListners(),this.popupForm.addEventListener("submit",(e=>{e.preventDefault(),this.handleFormSubmit(this._getInputValues()),e.target.reset(),super.close()}))}}const r={formSelector:".modal__form",inputSelector:".modal__form-input",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__popup_input_type_error",errorClass:"modal__popup_error_visible"},o=document.querySelector("#profile__edit-button"),i=document.querySelector("#profile__edit-modal"),a=document.querySelector(".profile__title"),l=document.querySelector(".profile__description"),c=document.querySelector("#profile-title-input"),u=document.querySelector("#profile-description-input"),d=(i.querySelector("#modal-closed-button"),i.querySelector(".modal__form")),m=(document.querySelector("#card-template").content.firstElementChild,document.querySelector(".cards__list"),document.querySelector(".profile__add-button")),_=document.querySelector("#add-card-modal"),p=(_.querySelector("#modal-closed-button"),document.querySelector("#preview-image")),h=(document.querySelector(".modal__image"),p.querySelector("#modal-closed-button"),document.querySelector(".modal__title"),_.querySelector("#add-card-form"));h.querySelector("#place-title"),h.querySelector("#place-image");const E=new class extends s{constructor(e){super({popupSelector:e}),this.previewImage=document.querySelector(".modal__imgae_popup"),this.previewImageTitle=document.querySelector(".modal__title")}open(e){this.previewImage.src=e.link,this.previewImage.alt=e.name,this.previewImageTitle.textContent=e.name,super.open()}}("#preview-image");function S(e){E.open({name:e.name,link:e.link})}function v(t){const s=function(t){return new e(t,"#card-template",S).getView()}(t);q.addItem(s)}E.setEventListners();const f=new n("#profile__edit-modal",(function(e){let{title:t,description:s}=e;y.setUserInfo(t,s)})),g=new n("#add-card-modal",(function(e){let{name:t,url:s}=e;v({name:t,link:s})})),y=new class{constructor(e,t){this._profiletitle=e,this._profiledescription=t}getUserInfo(){return{name:this._profiletitle.textContent,job:this._profiledescription.textContent}}setUserInfo(e,t){this._profiletitle.textContent=e,this._profiledescription.textContent=t}}(a,l),b=new t(r,d),w=new t(r,h);b.enableValidation(),w.enableValidation(),f.setEventListeners(),g.setEventListeners(),o.addEventListener("click",(()=>{const e=y.getUserInfo();c.value=e.name,u.value=e.job,f.open()})),m.addEventListener("click",(()=>{g.open()}));const q=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:v},".cards__list");q.renderItems()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,